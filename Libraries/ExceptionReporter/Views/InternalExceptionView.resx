<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        P86hIyTmJoctAAAAAElFTkSuQmCC
</value>
  </data>
</root>
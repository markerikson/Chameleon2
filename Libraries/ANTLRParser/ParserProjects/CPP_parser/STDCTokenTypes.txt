// $ANTLR 2.7.7 (20060906): CPP_parser.g -> STDCTokenTypes.txt$
STDC    // output token vocab name
LITERAL_template="template"=4
LESSTHAN=5
GREATERTHAN=6
LITERAL_typedef="typedef"=7
LITERAL_enum="enum"=8
SEMICOLON=9
ID=10
LCURLY=11
LITERAL_inline="inline"=12
LITERAL_extern="extern"=13
LITERAL_namespace="namespace"=14
LITERAL_antlrTrace_on="antlrTrace_on"=15
LITERAL_antlrTrace_off="antlrTrace_off"=16
RCURLY=17
ASSIGNEQUAL=18
COLON=19
OCTALINT=20
LITERAL_friend="friend"=21
StringLiteral=22
LITERAL_struct="struct"=23
LITERAL_union="union"=24
LITERAL_class="class"=25
LITERAL__declspec="_declspec"=26
LITERAL___declspec="__declspec"=27
LPAREN=28
RPAREN=29
LITERAL_auto="auto"=30
LITERAL_register="register"=31
LITERAL_static="static"=32
LITERAL_mutable="mutable"=33
LITERAL__inline="_inline"=34
LITERAL___inline="__inline"=35
LITERAL_virtual="virtual"=36
LITERAL_explicit="explicit"=37
LITERAL_typename="typename"=38
LITERAL_char="char"=39
LITERAL_wchar_t="wchar_t"=40
LITERAL_bool="bool"=41
LITERAL_short="short"=42
LITERAL_int="int"=43
"_int8"=44
"__int8"=45
"_int16"=46
"__int16"=47
"_int32"=48
"__int32"=49
"_int64"=50
"__int64"=51
"_w64"=52
"__w64"=53
LITERAL_long="long"=54
LITERAL_signed="signed"=55
LITERAL_unsigned="unsigned"=56
LITERAL_float="float"=57
LITERAL_double="double"=58
LITERAL_void="void"=59
LITERAL_const="const"=60
LITERAL_volatile="volatile"=61
COMMA=62
LITERAL_public="public"=63
LITERAL_protected="protected"=64
LITERAL_private="private"=65
OPERATOR="operator"=66
TILDE=67
LITERAL_typeid="typeid"=68
LSQUARE=69
RSQUARE=70
STAR=71
AMPERSAND=72
ELLIPSIS=73
LITERAL_throw="throw"=74
LITERAL_using="using"=75
LITERAL_case="case"=76
LITERAL_default="default"=77
LITERAL_if="if"=78
LITERAL_else="else"=79
LITERAL_switch="switch"=80
LITERAL_while="while"=81
LITERAL_do="do"=82
LITERAL_for="for"=83
LITERAL_goto="goto"=84
LITERAL_continue="continue"=85
LITERAL_break="break"=86
LITERAL_return="return"=87
LITERAL___try="__try"=88
LITERAL___except="__except"=89
LITERAL___finally="__finally"=90
LITERAL_try="try"=91
LITERAL_catch="catch"=92
TIMESEQUAL=93
DIVIDEEQUAL=94
MINUSEQUAL=95
PLUSEQUAL=96
MODEQUAL=97
SHIFTLEFTEQUAL=98
SHIFTRIGHTEQUAL=99
BITWISEANDEQUAL=100
BITWISEXOREQUAL=101
BITWISEOREQUAL=102
QUESTIONMARK=103
OR=104
AND=105
BITWISEOR=106
BITWISEXOR=107
NOTEQUAL=108
EQUAL=109
LESSTHANOREQUALTO=110
GREATERTHANOREQUALTO=111
SHIFTLEFT=112
SHIFTRIGHT=113
PLUS=114
MINUS=115
DIVIDE=116
MOD=117
DOTMBR=118
POINTERTOMBR=119
PLUSPLUS=120
MINUSMINUS=121
LITERAL_sizeof="sizeof"=122
LITERAL___alignof__="__alignof__"=123
SCOPE=124
LITERAL_dynamic_cast="dynamic_cast"=125
LITERAL_static_cast="static_cast"=126
LITERAL_reinterpret_cast="reinterpret_cast"=127
LITERAL_const_cast="const_cast"=128
DOT=129
POINTERTO=130
LITERAL_this="this"=131
DECIMALINT=132
HEXADECIMALINT=133
CharLiteral=134
WCharLiteral=135
WStringLiteral=136
FLOATONE=137
FLOATTWO=138
LITERAL_true="true"=139
LITERAL_false="false"=140
NOT=141
LITERAL_new="new"=142
LITERAL__cdecl="_cdecl"=143
LITERAL___cdecl="__cdecl"=144
LITERAL__near="_near"=145
LITERAL___near="__near"=146
LITERAL__far="_far"=147
LITERAL___far="__far"=148
LITERAL___interrupt="__interrupt"=149
LITERAL_pascal="pascal"=150
LITERAL__pascal="_pascal"=151
LITERAL___pascal="__pascal"=152
LITERAL__stdcall="_stdcall"=153
LITERAL___stdcall="__stdcall"=154
LITERAL_delete="delete"=155
MY=156
MYFUNCTION=157
MYPARAM=158
MYDECLAR=159
MYEXPRESSION=160
MYBODY=161
MYSTATEMENT=162
MYCLASS=163
MYTEMPLATE=164
MYNAMESPACE=165
MYTYPEDEF=166
MYENUM=167
MYTYPE=168
MYCALL=169
MYNEW=170
Whitespace=171
Comment=172
CPPComment=173
PREPROC_DIRECTIVE("a line directive")=174
LineDirective=175
Space=176
Pragma=177
Error=178
EndOfContinuedLine=179
EndOfLine=180
Escape=181
Digit=182
Decimal=183
LongSuffix=184
UnsignedSuffix=185
FloatSuffix=186
Exponent=187
UniversalCharacterName=188
HexQuad=189
HexadecimalDigit=190
Vocabulary=191
Number=192
